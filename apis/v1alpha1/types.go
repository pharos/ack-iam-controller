// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type AccessDetail struct {
	LastAuthenticatedTime *metav1.Time `json:"lastAuthenticatedTime,omitempty"`
	Region                *string      `json:"region,omitempty"`
}

type AccessKey struct {
	CreateDate *metav1.Time `json:"createDate,omitempty"`
}

type AccessKeyLastUsed struct {
	LastUsedDate *metav1.Time `json:"lastUsedDate,omitempty"`
	Region       *string      `json:"region,omitempty"`
	ServiceName  *string      `json:"serviceName,omitempty"`
}

type AccessKeyMetadata struct {
	CreateDate *metav1.Time `json:"createDate,omitempty"`
}

type AttachedPermissionsBoundary struct {
	PermissionsBoundaryARN *string `json:"permissionsBoundaryARN,omitempty"`
}

type AttachedPolicy struct {
	PolicyARN  *string `json:"policyARN,omitempty"`
	PolicyName *string `json:"policyName,omitempty"`
}

type EntityDetails struct {
	LastAuthenticated *metav1.Time `json:"lastAuthenticated,omitempty"`
}

type EntityInfo struct {
	ARN  *string `json:"arn,omitempty"`
	ID   *string `json:"id,omitempty"`
	Path *string `json:"path,omitempty"`
}

type ErrorDetails struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type Group struct {
	ARN        *string      `json:"arn,omitempty"`
	CreateDate *metav1.Time `json:"createDate,omitempty"`
	GroupID    *string      `json:"groupID,omitempty"`
	Path       *string      `json:"path,omitempty"`
}

type GroupDetail struct {
	ARN                     *string           `json:"arn,omitempty"`
	AttachedManagedPolicies []*AttachedPolicy `json:"attachedManagedPolicies,omitempty"`
	CreateDate              *metav1.Time      `json:"createDate,omitempty"`
	GroupID                 *string           `json:"groupID,omitempty"`
	Path                    *string           `json:"path,omitempty"`
}

type InstanceProfile struct {
	ARN               *string      `json:"arn,omitempty"`
	CreateDate        *metav1.Time `json:"createDate,omitempty"`
	InstanceProfileID *string      `json:"instanceProfileID,omitempty"`
	Path              *string      `json:"path,omitempty"`
	Roles             []*Role_SDK  `json:"roles,omitempty"`
	Tags              []*Tag       `json:"tags,omitempty"`
}

type LoginProfile struct {
	CreateDate            *metav1.Time `json:"createDate,omitempty"`
	PasswordResetRequired *bool        `json:"passwordResetRequired,omitempty"`
}

type MFADevice struct {
	EnableDate *metav1.Time `json:"enableDate,omitempty"`
}

type ManagedPolicyDetail struct {
	ARN                           *string      `json:"arn,omitempty"`
	AttachmentCount               *int64       `json:"attachmentCount,omitempty"`
	CreateDate                    *metav1.Time `json:"createDate,omitempty"`
	DefaultVersionID              *string      `json:"defaultVersionID,omitempty"`
	Description                   *string      `json:"description,omitempty"`
	IsAttachable                  *bool        `json:"isAttachable,omitempty"`
	Path                          *string      `json:"path,omitempty"`
	PermissionsBoundaryUsageCount *int64       `json:"permissionsBoundaryUsageCount,omitempty"`
	PolicyID                      *string      `json:"policyID,omitempty"`
	PolicyName                    *string      `json:"policyName,omitempty"`
	UpdateDate                    *metav1.Time `json:"updateDate,omitempty"`
}

type OpenIDConnectProviderListEntry struct {
	ARN *string `json:"arn,omitempty"`
}

type OrganizationsDecisionDetail struct {
	AllowedByOrganizations *bool `json:"allowedByOrganizations,omitempty"`
}

type PasswordPolicy struct {
	AllowUsersToChangePassword *bool `json:"allowUsersToChangePassword,omitempty"`
	ExpirePasswords            *bool `json:"expirePasswords,omitempty"`
	RequireLowercaseCharacters *bool `json:"requireLowercaseCharacters,omitempty"`
	RequireNumbers             *bool `json:"requireNumbers,omitempty"`
	RequireSymbols             *bool `json:"requireSymbols,omitempty"`
	RequireUppercaseCharacters *bool `json:"requireUppercaseCharacters,omitempty"`
}

type PermissionsBoundaryDecisionDetail struct {
	AllowedByPermissionsBoundary *bool `json:"allowedByPermissionsBoundary,omitempty"`
}

type PolicyDetail struct {
	PolicyDocument *string `json:"policyDocument,omitempty"`
	PolicyName     *string `json:"policyName,omitempty"`
}

type PolicyGrantingServiceAccess struct {
	PolicyARN  *string `json:"policyARN,omitempty"`
	PolicyName *string `json:"policyName,omitempty"`
}

type PolicyGroup struct {
	GroupID *string `json:"groupID,omitempty"`
}

type PolicyRole struct {
	RoleID   *string `json:"roleID,omitempty"`
	RoleName *string `json:"roleName,omitempty"`
}

type PolicyUser struct {
	UserID *string `json:"userID,omitempty"`
}

type PolicyVersion struct {
	CreateDate       *metav1.Time `json:"createDate,omitempty"`
	Document         *string      `json:"document,omitempty"`
	IsDefaultVersion *bool        `json:"isDefaultVersion,omitempty"`
	VersionID        *string      `json:"versionID,omitempty"`
}

type Policy_SDK struct {
	ARN                           *string      `json:"arn,omitempty"`
	AttachmentCount               *int64       `json:"attachmentCount,omitempty"`
	CreateDate                    *metav1.Time `json:"createDate,omitempty"`
	DefaultVersionID              *string      `json:"defaultVersionID,omitempty"`
	Description                   *string      `json:"description,omitempty"`
	IsAttachable                  *bool        `json:"isAttachable,omitempty"`
	Path                          *string      `json:"path,omitempty"`
	PermissionsBoundaryUsageCount *int64       `json:"permissionsBoundaryUsageCount,omitempty"`
	PolicyID                      *string      `json:"policyID,omitempty"`
	PolicyName                    *string      `json:"policyName,omitempty"`
	Tags                          []*Tag       `json:"tags,omitempty"`
	UpdateDate                    *metav1.Time `json:"updateDate,omitempty"`
}

type RoleDetail struct {
	ARN                      *string           `json:"arn,omitempty"`
	AssumeRolePolicyDocument *string           `json:"assumeRolePolicyDocument,omitempty"`
	AttachedManagedPolicies  []*AttachedPolicy `json:"attachedManagedPolicies,omitempty"`
	CreateDate               *metav1.Time      `json:"createDate,omitempty"`
	Path                     *string           `json:"path,omitempty"`
	RoleID                   *string           `json:"roleID,omitempty"`
	RoleLastUsed             *RoleLastUsed     `json:"roleLastUsed,omitempty"`
	RoleName                 *string           `json:"roleName,omitempty"`
	Tags                     []*Tag            `json:"tags,omitempty"`
}

type RoleLastUsed struct {
	LastUsedDate *metav1.Time `json:"lastUsedDate,omitempty"`
	Region       *string      `json:"region,omitempty"`
}

type Role_SDK struct {
	ARN                      *string       `json:"arn,omitempty"`
	AssumeRolePolicyDocument *string       `json:"assumeRolePolicyDocument,omitempty"`
	CreateDate               *metav1.Time  `json:"createDate,omitempty"`
	Description              *string       `json:"description,omitempty"`
	MaxSessionDuration       *int64        `json:"maxSessionDuration,omitempty"`
	Path                     *string       `json:"path,omitempty"`
	RoleID                   *string       `json:"roleID,omitempty"`
	RoleLastUsed             *RoleLastUsed `json:"roleLastUsed,omitempty"`
	RoleName                 *string       `json:"roleName,omitempty"`
	Tags                     []*Tag        `json:"tags,omitempty"`
}

type SAMLProviderListEntry struct {
	ARN        *string      `json:"arn,omitempty"`
	CreateDate *metav1.Time `json:"createDate,omitempty"`
	ValidUntil *metav1.Time `json:"validUntil,omitempty"`
}

type SSHPublicKey struct {
	UploadDate *metav1.Time `json:"uploadDate,omitempty"`
}

type SSHPublicKeyMetadata struct {
	UploadDate *metav1.Time `json:"uploadDate,omitempty"`
}

type ServerCertificate struct {
	Tags []*Tag `json:"tags,omitempty"`
}

type ServerCertificateMetadata struct {
	ARN                 *string      `json:"arn,omitempty"`
	Expiration          *metav1.Time `json:"expiration,omitempty"`
	Path                *string      `json:"path,omitempty"`
	ServerCertificateID *string      `json:"serverCertificateID,omitempty"`
	UploadDate          *metav1.Time `json:"uploadDate,omitempty"`
}

type ServiceLastAccessed struct {
	LastAuthenticated       *metav1.Time `json:"lastAuthenticated,omitempty"`
	LastAuthenticatedEntity *string      `json:"lastAuthenticatedEntity,omitempty"`
	LastAuthenticatedRegion *string      `json:"lastAuthenticatedRegion,omitempty"`
}

type ServiceSpecificCredential struct {
	CreateDate *metav1.Time `json:"createDate,omitempty"`
}

type ServiceSpecificCredentialMetadata struct {
	CreateDate *metav1.Time `json:"createDate,omitempty"`
}

type SigningCertificate struct {
	UploadDate *metav1.Time `json:"uploadDate,omitempty"`
}

type Tag struct {
	Key   *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}

type TrackedActionLastAccessed struct {
	ActionName         *string      `json:"actionName,omitempty"`
	LastAccessedEntity *string      `json:"lastAccessedEntity,omitempty"`
	LastAccessedRegion *string      `json:"lastAccessedRegion,omitempty"`
	LastAccessedTime   *metav1.Time `json:"lastAccessedTime,omitempty"`
}

type User struct {
	ARN              *string      `json:"arn,omitempty"`
	CreateDate       *metav1.Time `json:"createDate,omitempty"`
	PasswordLastUsed *metav1.Time `json:"passwordLastUsed,omitempty"`
	Path             *string      `json:"path,omitempty"`
	Tags             []*Tag       `json:"tags,omitempty"`
	UserID           *string      `json:"userID,omitempty"`
}

type UserDetail struct {
	ARN                     *string           `json:"arn,omitempty"`
	AttachedManagedPolicies []*AttachedPolicy `json:"attachedManagedPolicies,omitempty"`
	CreateDate              *metav1.Time      `json:"createDate,omitempty"`
	Path                    *string           `json:"path,omitempty"`
	Tags                    []*Tag            `json:"tags,omitempty"`
	UserID                  *string           `json:"userID,omitempty"`
}

type VirtualMFADevice struct {
	EnableDate *metav1.Time `json:"enableDate,omitempty"`
	Tags       []*Tag       `json:"tags,omitempty"`
}
